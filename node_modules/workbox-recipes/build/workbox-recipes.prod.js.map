{"version":3,"file":"workbox-recipes.prod.js","sources":["../_version.js","../googleFontsCache.js","../imageCache.js","../offlineFallback.js","../pageCache.js","../staticResourceCache.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:recipes:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { StaleWhileRevalidate } from 'workbox-strategies/StaleWhileRevalidate.js';\nimport { CacheFirst } from 'workbox-strategies/CacheFirst.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport { ExpirationPlugin } from 'workbox-expiration/ExpirationPlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [Google fonts]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#google_fonts} caching recipe\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cachePrefix] Cache prefix for caching stylesheets and webfonts. Defaults to google-fonts\n * @param {number} [options.maxAgeSeconds] Maximum age, in seconds, that font entries will be cached for. Defaults to 1 year\n * @param {number} [options.maxEntries] Maximum number of fonts that will be cached. Defaults to 30\n */\nfunction googleFontsCache(options = {}) {\n    const sheetCacheName = `${options.cachePrefix || 'google-fonts'}-stylesheets`;\n    const fontCacheName = `${options.cachePrefix || 'google-fonts'}-webfonts`;\n    const maxAgeSeconds = options.maxAgeSeconds || 60 * 60 * 24 * 365;\n    const maxEntries = options.maxEntries || 30;\n    // Cache the Google Fonts stylesheets with a stale-while-revalidate strategy.\n    registerRoute(({ url }) => url.origin === 'https://fonts.googleapis.com', new StaleWhileRevalidate({\n        cacheName: sheetCacheName,\n    }));\n    // Cache the underlying font files with a cache-first strategy for 1 year.\n    registerRoute(({ url }) => url.origin === 'https://fonts.gstatic.com', new CacheFirst({\n        cacheName: fontCacheName,\n        plugins: [\n            new CacheableResponsePlugin({\n                statuses: [0, 200],\n            }),\n            new ExpirationPlugin({\n                maxAgeSeconds,\n                maxEntries,\n            }),\n        ],\n    }));\n}\nexport { googleFontsCache };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { CacheFirst } from 'workbox-strategies/CacheFirst.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport { ExpirationPlugin } from 'workbox-expiration/ExpirationPlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [image caching recipe]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#caching_images}\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to images\n * @param {number} [options.maxAgeSeconds] Maximum age, in seconds, that font entries will be cached for. Defaults to 30 days\n * @param {number} [options.maxEntries] Maximum number of images that will be cached. Defaults to 60\n */\nfunction imageCache(options = {}) {\n    const defaultMatchCallback = ({ request }) => request.destination === 'image';\n    const cacheName = options.cacheName || 'images';\n    const matchCallback = options.matchCallback || defaultMatchCallback;\n    const maxAgeSeconds = options.maxAgeSeconds || 30 * 24 * 60 * 60;\n    const maxEntries = options.maxEntries || 60;\n    registerRoute(matchCallback, new CacheFirst({\n        cacheName,\n        plugins: [\n            new CacheableResponsePlugin({\n                statuses: [0, 200],\n            }),\n            new ExpirationPlugin({\n                maxEntries,\n                maxAgeSeconds\n            }),\n        ],\n    }));\n}\nexport { imageCache };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { setCatchHandler } from 'workbox-routing/setCatchHandler.js';\nimport { matchPrecache } from 'workbox-precaching/matchPrecache.js';\nimport './_version.js';\n/**\n * An implementation of the [comprehensive fallbacks recipe]{@link https://developers.google.com/web/tools/workbox/guides/advanced-recipes#comprehensive_fallbacks}. Be sure to include the fallbacks in your precache injection\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.pageFallback] Precache name to match for pag fallbacks. Defaults to offline.html\n * @param {string} [options.imageFallback] Precache name to match for image fallbacks.\n * @param {string} [options.fontFallback] Precache name to match for font fallbacks.\n */\nfunction offlineFallback(options = {}) {\n    const pageFallback = options.pageFallback || 'offline.html';\n    const imageFallback = options.imageFallback || false;\n    const fontFallback = options.fontFallback || false;\n    const handler = async (options) => {\n        const dest = options.request.destination;\n        if (dest === \"document\") {\n            return (await matchPrecache(pageFallback)) || Response.error();\n        }\n        if (dest === \"image\" && imageFallback !== false) {\n            return (await matchPrecache(imageFallback)) || Response.error();\n        }\n        if (dest === \"font\" && fontFallback !== false) {\n            return (await matchPrecache(fontFallback)) || Response.error();\n        }\n        return Response.error();\n    };\n    setCatchHandler(handler);\n}\nexport { offlineFallback };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { NetworkFirst } from 'workbox-strategies/NetworkFirst.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a page caching recipe with a network timeout\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to pages\n * @param {RouteMatchCallback} [options.matchCallback] Workbox callback function to call to match to. Defaults to request.mode === 'navigate';\n * @param {number} [options.networkTimoutSeconds] Maximum amount of time, in seconds, to wait on the network before falling back to cache. Defaults to 3\n */\nfunction pageCache(options = {}) {\n    const defaultMatchCallback = ({ request }) => request.mode === 'navigate';\n    const cacheName = options.cacheName || 'pages';\n    const matchCallback = options.matchCallback || defaultMatchCallback;\n    const networkTimeoutSeconds = options.networkTimeoutSeconds || 3;\n    registerRoute(matchCallback, new NetworkFirst({\n        networkTimeoutSeconds,\n        cacheName,\n        plugins: [\n            new CacheableResponsePlugin({\n                statuses: [0, 200],\n            }),\n        ],\n    }));\n}\nexport { pageCache };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { StaleWhileRevalidate } from 'workbox-strategies/StaleWhileRevalidate.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [CSS and JavaScript files recipe]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#cache_css_and_javascript_files}\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to static-resources\n */\nfunction staticResourceCache(options = {}) {\n    const defaultMatchCallback = ({ request }) => request.destination === 'style' || request.destination === 'script' || request.destination === 'worker';\n    const cacheName = options.cacheName || 'static-resources';\n    const matchCallback = options.matchCallback || defaultMatchCallback;\n    registerRoute(matchCallback, new StaleWhileRevalidate({\n        cacheName,\n        plugins: [\n            new CacheableResponsePlugin({\n                statuses: [0, 200],\n            }),\n        ],\n    }));\n}\nexport { staticResourceCache };\n"],"names":["self","_","e","options","sheetCacheName","cachePrefix","fontCacheName","maxAgeSeconds","maxEntries","registerRoute","url","origin","StaleWhileRevalidate","cacheName","CacheFirst","plugins","CacheableResponsePlugin","statuses","ExpirationPlugin","matchCallback","request","destination","pageFallback","imageFallback","fontFallback","setCatchHandler","async","dest","matchPrecache","Response","error","mode","networkTimeoutSeconds","NetworkFirst"],"mappings":"4FAEA,IACIA,KAAK,0BAA4BC,IAErC,MAAOC,8BCkBP,SAA0BC,EAAU,UAC1BC,GAAoBD,EAAQE,aAAe,gBAAzB,eAClBC,GAAmBH,EAAQE,aAAe,gBAAzB,YACjBE,EAAgBJ,EAAQI,eAAiB,QACzCC,EAAaL,EAAQK,YAAc,GAEzCC,iBAAc,EAAGC,IAAAA,KAAyB,iCAAfA,EAAIC,QAA2C,IAAIC,uBAAqB,CAC/FC,UAAWT,KAGfK,iBAAc,EAAGC,IAAAA,KAAyB,8BAAfA,EAAIC,QAAwC,IAAIG,aAAW,CAClFD,UAAWP,EACXS,QAAS,CACL,IAAIC,0BAAwB,CACxBC,SAAU,CAAC,EAAG,OAElB,IAAIC,mBAAiB,CACjBX,cAAAA,EACAC,WAAAA,sBCnBhB,SAAoBL,EAAU,UAEpBU,EAAYV,EAAQU,WAAa,SACjCM,EAAgBhB,EAAQgB,eAFD,GAAGC,QAAAA,KAAsC,UAAxBA,EAAQC,aAGhDd,EAAgBJ,EAAQI,eAAiB,OACzCC,EAAaL,EAAQK,YAAc,GACzCC,gBAAcU,EAAe,IAAIL,aAAW,CACxCD,UAAAA,EACAE,QAAS,CACL,IAAIC,0BAAwB,CACxBC,SAAU,CAAC,EAAG,OAElB,IAAIC,mBAAiB,CACjBV,WAAAA,EACAD,cAAAA,2BChBhB,SAAyBJ,EAAU,UACzBmB,EAAenB,EAAQmB,cAAgB,eACvCC,EAAgBpB,EAAQoB,gBAAiB,EACzCC,EAAerB,EAAQqB,eAAgB,EAc7CC,mBAbgBC,MAAAA,UACNC,EAAOxB,EAAQiB,QAAQC,kBAChB,aAATM,QACcC,gBAAcN,IAAkBO,SAASC,QAE9C,UAATH,IAAsC,IAAlBJ,QACNK,gBAAcL,IAAmBM,SAASC,QAE/C,SAATH,IAAoC,IAAjBH,SACLI,gBAAcJ,IAEzBK,SAASC,wBCdxB,SAAmB3B,EAAU,UAEnBU,EAAYV,EAAQU,WAAa,QACjCM,EAAgBhB,EAAQgB,eAFD,GAAGC,QAAAA,KAA+B,aAAjBA,EAAQW,MAGhDC,EAAwB7B,EAAQ6B,uBAAyB,EAC/DvB,gBAAcU,EAAe,IAAIc,eAAa,CAC1CD,sBAAAA,EACAnB,UAAAA,EACAE,QAAS,CACL,IAAIC,0BAAwB,CACxBC,SAAU,CAAC,EAAG,kCCZ9B,SAA6Bd,EAAU,UAE7BU,EAAYV,EAAQU,WAAa,mBACjCM,EAAgBhB,EAAQgB,eAFD,GAAGC,QAAAA,KAAsC,UAAxBA,EAAQC,aAAmD,WAAxBD,EAAQC,aAAoD,WAAxBD,EAAQC,aAG7HZ,gBAAcU,EAAe,IAAIP,uBAAqB,CAClDC,UAAAA,EACAE,QAAS,CACL,IAAIC,0BAAwB,CACxBC,SAAU,CAAC,EAAG"}